syntax = "proto3";
package neutron.interchainadapter.interchainqueries;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "interchainqueries/params.proto";
import "interchainqueries/genesis.proto";
import "interchainqueries/tx.proto";

// this line is used by starport scaffolding # 1

option go_package = "github.com/neutron-org/neutron/x/interchainqueries/types";

// Query defines the gRPC querier service.
service Query {
  // Parameters queries the parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get =
        "/neutron/interchainqueries/interchainqueries/params";
  }

  rpc RegisteredKVQueries(QueryRegisteredKVQueriesRequest)
      returns (QueryRegisteredKVQueriesResponse) {
    option (google.api.http).get =
        "/neutron/interchainqueries/interchainqueries/registered_kv_queries";
  }

  rpc RegisteredTXQueries(QueryRegisteredTXQueriesRequest)
      returns (QueryRegisteredTXQueriesResponse) {
    option (google.api.http).get =
        "/neutron/interchainqueries/interchainqueries/registered_tx_queries";
  }

  rpc RegisteredKVQuery(QueryRegisteredKVQueryRequest)
      returns (QueryRegisteredKVQueryResponse) {
    option (google.api.http).get =
        "/neutron/interchainqueries/interchainqueries/registered_kv_query";
  }

  rpc RegisteredTXQuery(QueryRegisteredTXQueryRequest)
      returns (QueryRegisteredTXQueryResponse) {
    option (google.api.http).get =
        "/neutron/interchainqueries/interchainqueries/registered_tx_query";
  }

  rpc KVQueryResult(QueryRegisteredKVQueryResultRequest) returns (QueryRegisteredKVQueryResultResponse) {
    option (google.api.http).get = "/neutron/interchainqueries/interchainqueries/query_kv_result";
  }
}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [ (gogoproto.nullable) = false ];
}

message QueryRegisteredKVQueriesRequest {}
message QueryRegisteredKVQueriesResponse {
  repeated RegisteredKVQuery registered_queries = 1
  [ (gogoproto.nullable) = false ];
}

message QueryRegisteredTXQueriesRequest {}
message QueryRegisteredTXQueriesResponse {
  repeated RegisteredTXQuery registered_queries = 1
  [ (gogoproto.nullable) = false ];
}

message QueryRegisteredKVQueryRequest {
  uint64 query_id = 1;
}
message QueryRegisteredKVQueryResponse {
  RegisteredKVQuery registered_query = 1;
}

message QueryRegisteredTXQueryRequest {
  uint64 query_id = 1;
}
message QueryRegisteredTXQueryResponse {
  RegisteredTXQuery registered_query = 1;
}

message QueryRegisteredKVQueryResultRequest {
  uint64 query_id = 1;
}

message QueryRegisteredKVQueryResultResponse {
  QueryResult result = 1;
}

message Transaction {
  uint64 id = 1;
  uint64 height = 2;
  bytes data = 3;
}
